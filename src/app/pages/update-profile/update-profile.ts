import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { HttpClient, HttpClientModule } from '@angular/common/http';
import { Header } from '../header/header';
import { Router } from '@angular/router';
import { Location } from '@angular/common';

@Component({
  selector: 'app-update-profile',
  standalone: true,
  imports: [CommonModule, FormsModule, Header, HttpClientModule],
  templateUrl: './update-profile.html',
  styleUrls: ['./update-profile.scss']
})
export class UpdateProfile implements OnInit {
  user: any = null;
  newUsername: string = '';
  selectedFile: File | null = null;
  previewImage: string | null = null;
  apiUrl = 'http://localhost:3000/users/update'; // ‚úÖ ‡πÄ‡∏™‡πâ‡∏ô API ‡∏à‡∏£‡∏¥‡∏á

  constructor(private http: HttpClient , private router: Router, private location: Location) {}

  ngOnInit() {
    this.loadUser();
  }

  /** ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å localStorage */
  loadUser() {
    const userData = localStorage.getItem('user');
    if (userData) {
      this.user = JSON.parse(userData);
      this.newUsername = this.user?.username || '';
      console.log('‚úÖ Loaded user:', this.user);
    } else {
      console.warn('‚ö†Ô∏è No user data found in localStorage');
    }
  }

  /** ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà */
  onFileSelected(event: any) {
    const file = event.target.files[0];
    if (file) {
      this.selectedFile = file;

      // ‡πÅ‡∏™‡∏î‡∏á preview ‡∏£‡∏π‡∏õ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
      const reader = new FileReader();
      reader.onload = (e: any) => {
        this.previewImage = e.target.result;
      };
      reader.readAsDataURL(file);
    }
  }

  /** ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô -> ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ backend */
  onSubmit() {
    if (!this.user?.uid) {
      alert('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö user_id');
      return;
    }

    // ‚úÖ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏á‡πÑ‡∏õ backend
    const formData = new FormData();
    formData.append('uid', this.user.uid.toString());  // ‡∏™‡πà‡∏á ID ‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
    formData.append('username', this.newUsername);
    if (this.selectedFile) {
      formData.append('avatar', this.selectedFile);
    }

    console.log('üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• FormData ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API:', this.apiUrl);

    this.http.post(this.apiUrl, formData).subscribe({
      next: (res: any) => {
        console.log('‚úÖ Update response:', res);

        if (res?.user) {
          // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô localStorage
          localStorage.setItem('user', JSON.stringify(res.user));
          this.user = res.user;
          alert('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
          this.location.back()
        } else {
          alert('‚ö†Ô∏è API ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ');
        }
      },
      error: (err) => {
        console.error('‚ùå Update error:', err);
        alert('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ');
      },
    });
  }
}
