import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { HttpClient, HttpClientModule } from '@angular/common/http';
import { RouterLink, RouterModule } from '@angular/router';

@Component({
  selector: 'app-profile',
  standalone: true,
  imports: [CommonModule, RouterModule, FormsModule, HttpClientModule, RouterLink],
  templateUrl: './profile.html',
  styleUrls: ['./profile.scss'],
})
export class Profile implements OnInit {
  user: any = null;               // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  showPopup: boolean = false;     // ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° popup ‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô
  newUsername: string = '';       // ‡∏Ñ‡πà‡∏≤ username ‡πÉ‡∏´‡∏°‡πà
  selectedFile: File | null = null; // ‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà (avatar)
  apiUrl = 'http://localhost:3000/users/update'; // ‚úÖ API ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

  constructor(private http: HttpClient) {}

  ngOnInit() {
    this.loadUser();
  }

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å localStorage
  loadUser() {
    const userData = localStorage.getItem('user');
    if (userData) {
      this.user = JSON.parse(userData);
      console.log('‚úÖ Loaded user:', this.user);
    } else {
      console.warn('‚ö†Ô∏è No user data found in localStorage');
    }
  }

  // ‡πÄ‡∏õ‡∏¥‡∏î popup ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  openEditPopup() {
    this.showPopup = true;
    this.newUsername = this.user?.username || '';
  }

  // ‡∏õ‡∏¥‡∏î popup
  closeEditPopup() {
    this.showPopup = false;
    this.newUsername = '';
    this.selectedFile = null;
  }

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å input
  onFileSelected(event: any) {
    const file = event.target.files[0];
    if (file) {
      this.selectedFile = file;
      console.log('üì∏ Selected file:', file.name);
    }
  }

  // ‡∏Å‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
  onSubmit() {
    if (!this.user?.uid) {
      alert('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö user_id');
      return;
    }

    const formData = new FormData();
    formData.append('uid', this.user.uid);          // user_id ‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å localStorage
    formData.append('username', this.newUsername);      // ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà
    if (this.selectedFile) {
      formData.append('avatar', this.selectedFile);     // ‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà
    }

    console.log('üì§ Sending formData...', this.apiUrl);

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API POST
    this.http.post(this.apiUrl, formData).subscribe({
      next: (res: any) => {
        console.log('‚úÖ Update response:', res);

        if (res?.user) {
          // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô localStorage
          localStorage.setItem('user', JSON.stringify(res.user));
          this.user = res.user;

          alert('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
          this.closeEditPopup();
        } else {
          alert('‚ö†Ô∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô response');
        }
      },
      error: (err) => {
        console.error('‚ùå Update error:', err);
        alert('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ');
      },
    });
  }
}
